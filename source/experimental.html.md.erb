---
title: One-time Polled Screen v1.0.0
language_tabs:
  - shell: Shell
  - http: HTTP
  - javascript: JavaScript
  - ruby: Ruby
  - python: Python
  - php: PHP
  - java: Java
  - go: Go
toc_footers: []
includes: []
search: true
highlight_theme: darkula
headingLevel: 2

---

<!-- Generator: Widdershins v4.0.1 -->

<h1 id="one-time-polled-screen">One-time Polled Screen v1.0.0</h1>

> Scroll down for code samples, example requests and responses. Select a language for code samples from the tabs above or the mobile navigation menu.

# Authentication

- HTTP Authentication, scheme: signature 

<h1 id="one-time-polled-screen-defining-your-integration">Defining your integration</h1>

## Get integration metadata

<a id="opIdgetMetadata"></a>

> Code samples

```shell
# You can also use wget
curl -X GET / \
  -H 'Accept: application/json'

```

```http
GET / HTTP/1.1

Accept: application/json

```

```javascript

const headers = {
  'Accept':'application/json'
};

fetch('/',
{
  method: 'GET',

  headers: headers
})
.then(function(res) {
    return res.json();
}).then(function(body) {
    console.log(body);
});

```

```ruby
require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/',
  params: {
  }, headers: headers

p JSON.parse(result)

```

```python
import requests
headers = {
  'Accept': 'application/json'
}

r = requests.get('/', headers = headers)

print(r.json())

```

```php
<?php

require 'vendor/autoload.php';

$headers = array(
    'Accept' => 'application/json',
);

$client = new \GuzzleHttp\Client();

// Define array of request body.
$request_body = array();

try {
    $response = $client->request('GET','/', array(
        'headers' => $headers,
        'json' => $request_body,
       )
    );
    print_r($response->getBody()->getContents());
 }
 catch (\GuzzleHttp\Exception\BadResponseException $e) {
    // handle exception or api errors.
    print_r($e->getMessage());
 }

 // ...

```

```java
URL obj = new URL("/");
HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");
int responseCode = con.getResponseCode();
BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream()));
String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();
System.out.println(response.toString());

```

```go
package main

import (
       "bytes"
       "net/http"
)

func main() {

    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    data := bytes.NewBuffer([]byte{jsonReq})
    req, err := http.NewRequest("GET", "/", data)
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}

```

`GET /`

> Example responses

> 200 Response

```json
{
  "protocol_version": 1,
  "provider_name": "Individual Screening Reference"
}
```

<h3 id="get-integration-metadata-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Basic properties of the integration|[Metadata](#schemametadata)|

<aside class="success">
This operation does not require authentication
</aside>

## Configure how PassFort will interact with your integration

<a id="opIdgetConfig"></a>

> Code samples

```shell
# You can also use wget
curl -X GET /config \
  -H 'Accept: application/json'

```

```http
GET /config HTTP/1.1

Accept: application/json

```

```javascript

const headers = {
  'Accept':'application/json'
};

fetch('/config',
{
  method: 'GET',

  headers: headers
})
.then(function(res) {
    return res.json();
}).then(function(body) {
    console.log(body);
});

```

```ruby
require 'rest-client'
require 'json'

headers = {
  'Accept' => 'application/json'
}

result = RestClient.get '/config',
  params: {
  }, headers: headers

p JSON.parse(result)

```

```python
import requests
headers = {
  'Accept': 'application/json'
}

r = requests.get('/config', headers = headers)

print(r.json())

```

```php
<?php

require 'vendor/autoload.php';

$headers = array(
    'Accept' => 'application/json',
);

$client = new \GuzzleHttp\Client();

// Define array of request body.
$request_body = array();

try {
    $response = $client->request('GET','/config', array(
        'headers' => $headers,
        'json' => $request_body,
       )
    );
    print_r($response->getBody()->getContents());
 }
 catch (\GuzzleHttp\Exception\BadResponseException $e) {
    // handle exception or api errors.
    print_r($e->getMessage());
 }

 // ...

```

```java
URL obj = new URL("/config");
HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("GET");
int responseCode = con.getResponseCode();
BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream()));
String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();
System.out.println(response.toString());

```

```go
package main

import (
       "bytes"
       "net/http"
)

func main() {

    headers := map[string][]string{
        "Accept": []string{"application/json"},
    }

    data := bytes.NewBuffer([]byte{jsonReq})
    req, err := http.NewRequest("GET", "/config", data)
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}

```

`GET /config`

> Example responses

> 200 Response

```json
{
  "check_type": "PEPS_AND_SANCTIONS_SCREEN",
  "check_template": {
    "polling_strategy": "UNIFORM",
    "initial_interval": 0,
    "polling_interval": 0,
    "max_polls": 0
  },
  "pricing": {
    "supports_reselling": true,
    "maximum_cost": 0
  },
  "supported_countries": [
    "GBR"
  ],
  "supported_features": [
    "PEPS"
  ],
  "credentials": {
    "fields": [
      {
        "type": "string",
        "name": "string",
        "label": "string"
      }
    ]
  },
  "config": {
    "fields": [
      {
        "type": "string",
        "name": "string",
        "label": "string"
      }
    ]
  }
}
```

<h3 id="configure-how-passfort-will-interact-with-your-integration-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|Defines several important properties about your integration. The general structure is common across all check kinds but specific check types or templates will support additional fields.|[Config](#schemaconfig)|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
signatureAuth
</aside>

<h1 id="one-time-polled-screen-running-a-check">Running a check</h1>

## Instruct a new check with the provider

<a id="opIdinstructCheck"></a>

> Code samples

```shell
# You can also use wget
curl -X POST /checks \
  -H 'Content-Type: application/json' \
  -H 'Accept: application/json'

```

```http
POST /checks HTTP/1.1

Content-Type: application/json
Accept: application/json

```

```javascript
const inputBody = '{
  "id": "01234567-89ab-cdef-0123-456789abcdef",
  "demo_result": "ANY",
  "commercial_relationship": "DIRECT",
  "check_input": {
    "entity_type": "COMPANY",
    "screening_hits": [
      {
        "hit_id": "12345",
        "provider": {
          "name": "Screening Reference Integration",
          "hit_id": "12345",
          "label": "screening-ref"
        },
        "data": {
          "name": "The Example Company"
        },
        "status": "UNRESOLVED",
        "flags": [
          {
            "type": "REFER"
          },
          {
            "type": "PEP"
          },
          {
            "type": "SANCTION"
          },
          {
            "type": "ADVERSE_MEDIA"
          }
        ]
      }
    ]
  },
  "provider_config": {},
  "provider_credentials": {}
}';
const headers = {
  'Content-Type':'application/json',
  'Accept':'application/json'
};

fetch('/checks',
{
  method: 'POST',
  body: inputBody,
  headers: headers
})
.then(function(res) {
    return res.json();
}).then(function(body) {
    console.log(body);
});

```

```ruby
require 'rest-client'
require 'json'

headers = {
  'Content-Type' => 'application/json',
  'Accept' => 'application/json'
}

result = RestClient.post '/checks',
  params: {
  }, headers: headers

p JSON.parse(result)

```

```python
import requests
headers = {
  'Content-Type': 'application/json',
  'Accept': 'application/json'
}

r = requests.post('/checks', headers = headers)

print(r.json())

```

```php
<?php

require 'vendor/autoload.php';

$headers = array(
    'Content-Type' => 'application/json',
    'Accept' => 'application/json',
);

$client = new \GuzzleHttp\Client();

// Define array of request body.
$request_body = array();

try {
    $response = $client->request('POST','/checks', array(
        'headers' => $headers,
        'json' => $request_body,
       )
    );
    print_r($response->getBody()->getContents());
 }
 catch (\GuzzleHttp\Exception\BadResponseException $e) {
    // handle exception or api errors.
    print_r($e->getMessage());
 }

 // ...

```

```java
URL obj = new URL("/checks");
HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("POST");
int responseCode = con.getResponseCode();
BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream()));
String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();
System.out.println(response.toString());

```

```go
package main

import (
       "bytes"
       "net/http"
)

func main() {

    headers := map[string][]string{
        "Content-Type": []string{"application/json"},
        "Accept": []string{"application/json"},
    }

    data := bytes.NewBuffer([]byte{jsonReq})
    req, err := http.NewRequest("POST", "/checks", data)
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}

```

`POST /checks`

> Body parameter

```json
{
  "id": "01234567-89ab-cdef-0123-456789abcdef",
  "demo_result": "ANY",
  "commercial_relationship": "DIRECT",
  "check_input": {
    "entity_type": "COMPANY",
    "screening_hits": [
      {
        "hit_id": "12345",
        "provider": {
          "name": "Screening Reference Integration",
          "hit_id": "12345",
          "label": "screening-ref"
        },
        "data": {
          "name": "The Example Company"
        },
        "status": "UNRESOLVED",
        "flags": [
          {
            "type": "REFER"
          },
          {
            "type": "PEP"
          },
          {
            "type": "SANCTION"
          },
          {
            "type": "ADVERSE_MEDIA"
          }
        ]
      }
    ]
  },
  "provider_config": {},
  "provider_credentials": {}
}
```

<h3 id="instruct-a-new-check-with-the-provider-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|body|body|[StartCheckRequest](#schemastartcheckrequest)|true|none|

> Example responses

> 200 Response

```json
{
  "provider_id": "01234567-89ab-cdef-0123-456789abcdef",
  "reference": "ABC-12345",
  "custom_data": {},
  "provider_data": "Demo result. Did not make request to provider.",
  "warnings": [
    {
      "type": "INVALID_CREDENTIALS",
      "message": "string"
    }
  ],
  "errors": [
    {
      "type": null,
      "sub_type": "UNSUPPORTED_COUNTRY",
      "message": "string",
      "data": null
    }
  ]
}
```

<h3 id="instruct-a-new-check-with-the-provider-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|A check was instructed with the provider|[StartCheckResponse](#schemastartcheckresponse)|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
signatureAuth
</aside>

## Attempt to fetch the completed check result from the provider

<a id="opIdpollCheck"></a>

> Code samples

```shell
# You can also use wget
curl -X POST /checks/{checkId}/poll \
  -H 'Content-Type: application/json' \
  -H 'Accept: application/json'

```

```http
POST /checks/{checkId}/poll HTTP/1.1

Content-Type: application/json
Accept: application/json

```

```javascript
const inputBody = '{
  "id": "01234567-89ab-cdef-0123-456789abcdef",
  "demo_result": "ANY",
  "commercial_relationship": null,
  "provider_config": {},
  "provider_credentials": {},
  "provider_id": "01234567-89ab-cdef-0123-456789abcdef",
  "reference": "string",
  "custom_data": {}
}';
const headers = {
  'Content-Type':'application/json',
  'Accept':'application/json'
};

fetch('/checks/{checkId}/poll',
{
  method: 'POST',
  body: inputBody,
  headers: headers
})
.then(function(res) {
    return res.json();
}).then(function(body) {
    console.log(body);
});

```

```ruby
require 'rest-client'
require 'json'

headers = {
  'Content-Type' => 'application/json',
  'Accept' => 'application/json'
}

result = RestClient.post '/checks/{checkId}/poll',
  params: {
  }, headers: headers

p JSON.parse(result)

```

```python
import requests
headers = {
  'Content-Type': 'application/json',
  'Accept': 'application/json'
}

r = requests.post('/checks/{checkId}/poll', headers = headers)

print(r.json())

```

```php
<?php

require 'vendor/autoload.php';

$headers = array(
    'Content-Type' => 'application/json',
    'Accept' => 'application/json',
);

$client = new \GuzzleHttp\Client();

// Define array of request body.
$request_body = array();

try {
    $response = $client->request('POST','/checks/{checkId}/poll', array(
        'headers' => $headers,
        'json' => $request_body,
       )
    );
    print_r($response->getBody()->getContents());
 }
 catch (\GuzzleHttp\Exception\BadResponseException $e) {
    // handle exception or api errors.
    print_r($e->getMessage());
 }

 // ...

```

```java
URL obj = new URL("/checks/{checkId}/poll");
HttpURLConnection con = (HttpURLConnection) obj.openConnection();
con.setRequestMethod("POST");
int responseCode = con.getResponseCode();
BufferedReader in = new BufferedReader(
    new InputStreamReader(con.getInputStream()));
String inputLine;
StringBuffer response = new StringBuffer();
while ((inputLine = in.readLine()) != null) {
    response.append(inputLine);
}
in.close();
System.out.println(response.toString());

```

```go
package main

import (
       "bytes"
       "net/http"
)

func main() {

    headers := map[string][]string{
        "Content-Type": []string{"application/json"},
        "Accept": []string{"application/json"},
    }

    data := bytes.NewBuffer([]byte{jsonReq})
    req, err := http.NewRequest("POST", "/checks/{checkId}/poll", data)
    req.Header = headers

    client := &http.Client{}
    resp, err := client.Do(req)
    // ...
}

```

`POST /checks/{checkId}/poll`

> Body parameter

```json
{
  "id": "01234567-89ab-cdef-0123-456789abcdef",
  "demo_result": "ANY",
  "commercial_relationship": null,
  "provider_config": {},
  "provider_credentials": {},
  "provider_id": "01234567-89ab-cdef-0123-456789abcdef",
  "reference": "string",
  "custom_data": {}
}
```

<h3 id="attempt-to-fetch-the-completed-check-result-from-the-provider-parameters">Parameters</h3>

|Name|In|Type|Required|Description|
|---|---|---|---|---|
|body|body|[PollCheckRequest](#schemapollcheckrequest)|true|none|

> Example responses

> 200 Response

```json
{
  "provider_id": "01234567-89ab-cdef-0123-456789abcdef",
  "reference": "ABC-12345",
  "custom_data": {},
  "provider_data": "Demo result. Did not make request to provider.",
  "check_output": {
    "entity_type": "COMPANY",
    "screening_hits": [
      {
        "hit_id": "12345",
        "provider": {
          "name": "Screening Reference Integration",
          "hit_id": "12345",
          "label": "screening-ref"
        },
        "data": {
          "name": "The Example Company"
        },
        "status": "UNRESOLVED",
        "flags": [
          {
            "type": "REFER"
          },
          {
            "type": "PEP"
          },
          {
            "type": "SANCTION"
          },
          {
            "type": "ADVERSE_MEDIA"
          }
        ]
      }
    ]
  },
  "charges": [],
  "warnings": [
    {
      "type": "INVALID_CREDENTIALS",
      "message": "string"
    }
  ],
  "errors": [
    {
      "type": null,
      "sub_type": "UNSUPPORTED_COUNTRY",
      "message": "string",
      "data": null
    }
  ]
}
```

<h3 id="attempt-to-fetch-the-completed-check-result-from-the-provider-responses">Responses</h3>

|Status|Meaning|Description|Schema|
|---|---|---|---|
|200|[OK](https://tools.ietf.org/html/rfc7231#section-6.3.1)|The check status was fetched from the provider|[PollCheckResponse](#schemapollcheckresponse)|

<aside class="warning">
To perform this operation, you must be authenticated by means of one of the following methods:
signatureAuth
</aside>

# Schemas

<h2 id="tocS_Config">Config</h2>
<!-- backwards compatibility -->
<a id="schemaconfig"></a>
<a id="schema_Config"></a>
<a id="tocSconfig"></a>
<a id="tocsconfig"></a>

```json
{
  "check_type": "PEPS_AND_SANCTIONS_SCREEN",
  "check_template": {
    "polling_strategy": "UNIFORM",
    "initial_interval": 0,
    "polling_interval": 0,
    "max_polls": 0
  },
  "pricing": {
    "supports_reselling": true,
    "maximum_cost": 0
  },
  "supported_countries": [
    "GBR"
  ],
  "supported_features": [
    "PEPS"
  ],
  "credentials": {
    "fields": [
      {
        "type": "string",
        "name": "string",
        "label": "string"
      }
    ]
  },
  "config": {
    "fields": [
      {
        "type": "string",
        "name": "string",
        "label": "string"
      }
    ]
  }
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|check_type|string|true|none|none|
|check_template|object|true|none|none|
|» polling_strategy|string|false|none|none|
|» initial_interval|number|false|none|none|
|» polling_interval|number|false|none|none|
|» max_polls|number|false|none|none|
|pricing|object|true|none|none|
|» supports_reselling|boolean|true|none|none|
|» maximum_cost|number|false|none|none|
|supported_countries|[[CountryCode](#schemacountrycode)]|true|none|[[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) (3 letter country code)]|
|supported_features|[string]|false|none|none|
|credentials|object|true|none|none|
|» fields|[[ConfigField](#schemaconfigfield)]|false|none|none|
|config|object|true|none|none|
|» fields|[[ConfigField](#schemaconfigfield)]|false|none|none|

#### Enumerated Values

|Property|Value|
|---|---|
|check_type|PEPS_AND_SANCTIONS_SCREEN|
|check_type|COMPANY_PEPS_AND_SANCTIONS_SCREEN|
|polling_strategy|UNIFORM|

<h2 id="tocS_ConfigField">ConfigField</h2>
<!-- backwards compatibility -->
<a id="schemaconfigfield"></a>
<a id="schema_ConfigField"></a>
<a id="tocSconfigfield"></a>
<a id="tocsconfigfield"></a>

```json
{
  "type": "string",
  "name": "string",
  "label": "string"
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|type|string|true|none|none|
|name|string|true|none|none|
|label|string|true|none|none|

#### Enumerated Values

|Property|Value|
|---|---|
|type|string|
|type|boolean|
|type|MultiSelect|

<h2 id="tocS_CountryCode">CountryCode</h2>
<!-- backwards compatibility -->
<a id="schemacountrycode"></a>
<a id="schema_CountryCode"></a>
<a id="tocScountrycode"></a>
<a id="tocscountrycode"></a>

```json
"GBR"

```

CountryCode

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|CountryCode|string|false|none|[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) (3 letter country code)|

#### Enumerated Values

|Property|Value|
|---|---|
|CountryCode|AFG|
|CountryCode|ALA|
|CountryCode|ALB|
|CountryCode|DZA|
|CountryCode|ASM|
|CountryCode|AND|
|CountryCode|AGO|
|CountryCode|AIA|
|CountryCode|ATA|
|CountryCode|ATG|
|CountryCode|ARG|
|CountryCode|ARM|
|CountryCode|ABW|
|CountryCode|AUS|
|CountryCode|AUT|
|CountryCode|AZE|
|CountryCode|BHS|
|CountryCode|BHR|
|CountryCode|BGD|
|CountryCode|BRB|
|CountryCode|BLR|
|CountryCode|BEL|
|CountryCode|BLZ|
|CountryCode|BEN|
|CountryCode|BMU|
|CountryCode|BTN|
|CountryCode|BOL|
|CountryCode|BES|
|CountryCode|BIH|
|CountryCode|BWA|
|CountryCode|BVT|
|CountryCode|BRA|
|CountryCode|IOT|
|CountryCode|BRN|
|CountryCode|BGR|
|CountryCode|BFA|
|CountryCode|BDI|
|CountryCode|KHM|
|CountryCode|CMR|
|CountryCode|CAN|
|CountryCode|CPV|
|CountryCode|CYM|
|CountryCode|CAF|
|CountryCode|TCD|
|CountryCode|CHL|
|CountryCode|CHN|
|CountryCode|CXR|
|CountryCode|CCK|
|CountryCode|COL|
|CountryCode|COM|
|CountryCode|COG|
|CountryCode|COD|
|CountryCode|COK|
|CountryCode|CRI|
|CountryCode|CIV|
|CountryCode|HRV|
|CountryCode|CUB|
|CountryCode|CUW|
|CountryCode|CYP|
|CountryCode|CZE|
|CountryCode|DNK|
|CountryCode|DJI|
|CountryCode|DMA|
|CountryCode|DOM|
|CountryCode|ECU|
|CountryCode|EGY|
|CountryCode|SLV|
|CountryCode|GNQ|
|CountryCode|ERI|
|CountryCode|EST|
|CountryCode|ETH|
|CountryCode|FLK|
|CountryCode|FRO|
|CountryCode|FJI|
|CountryCode|FIN|
|CountryCode|FRA|
|CountryCode|GUF|
|CountryCode|PYF|
|CountryCode|ATF|
|CountryCode|GAB|
|CountryCode|GMB|
|CountryCode|GEO|
|CountryCode|DEU|
|CountryCode|GHA|
|CountryCode|GIB|
|CountryCode|GRC|
|CountryCode|GRL|
|CountryCode|GRD|
|CountryCode|GLP|
|CountryCode|GUM|
|CountryCode|GTM|
|CountryCode|GGY|
|CountryCode|GIN|
|CountryCode|GNB|
|CountryCode|GUY|
|CountryCode|HTI|
|CountryCode|HMD|
|CountryCode|VAT|
|CountryCode|HND|
|CountryCode|HKG|
|CountryCode|HUN|
|CountryCode|ISL|
|CountryCode|IND|
|CountryCode|IDN|
|CountryCode|IRN|
|CountryCode|IRQ|
|CountryCode|IRL|
|CountryCode|IMN|
|CountryCode|ISR|
|CountryCode|ITA|
|CountryCode|JAM|
|CountryCode|JPN|
|CountryCode|JEY|
|CountryCode|JOR|
|CountryCode|KAZ|
|CountryCode|KEN|
|CountryCode|KIR|
|CountryCode|PRK|
|CountryCode|KOR|
|CountryCode|KWT|
|CountryCode|KGZ|
|CountryCode|LAO|
|CountryCode|LVA|
|CountryCode|LBN|
|CountryCode|LSO|
|CountryCode|LBR|
|CountryCode|LBY|
|CountryCode|LIE|
|CountryCode|LTU|
|CountryCode|LUX|
|CountryCode|MAC|
|CountryCode|MKD|
|CountryCode|MDG|
|CountryCode|MWI|
|CountryCode|MYS|
|CountryCode|MDV|
|CountryCode|MLI|
|CountryCode|MLT|
|CountryCode|MHL|
|CountryCode|MTQ|
|CountryCode|MRT|
|CountryCode|MUS|
|CountryCode|MYT|
|CountryCode|MEX|
|CountryCode|FSM|
|CountryCode|MDA|
|CountryCode|MCO|
|CountryCode|MNG|
|CountryCode|MNE|
|CountryCode|MSR|
|CountryCode|MAR|
|CountryCode|MOZ|
|CountryCode|MMR|
|CountryCode|NAM|
|CountryCode|NRU|
|CountryCode|NPL|
|CountryCode|NLD|
|CountryCode|NCL|
|CountryCode|NZL|
|CountryCode|NIC|
|CountryCode|NER|
|CountryCode|NGA|
|CountryCode|NIU|
|CountryCode|NFK|
|CountryCode|MNP|
|CountryCode|NOR|
|CountryCode|OMN|
|CountryCode|PAK|
|CountryCode|PLW|
|CountryCode|PSE|
|CountryCode|PAN|
|CountryCode|PNG|
|CountryCode|PRY|
|CountryCode|PER|
|CountryCode|PHL|
|CountryCode|PCN|
|CountryCode|POL|
|CountryCode|PRT|
|CountryCode|PRI|
|CountryCode|QAT|
|CountryCode|REU|
|CountryCode|RKS|
|CountryCode|ROU|
|CountryCode|RUS|
|CountryCode|RWA|
|CountryCode|BLM|
|CountryCode|SHN|
|CountryCode|KNA|
|CountryCode|LCA|
|CountryCode|MAF|
|CountryCode|SPM|
|CountryCode|VCT|
|CountryCode|WSM|
|CountryCode|SMR|
|CountryCode|STP|
|CountryCode|SAU|
|CountryCode|SEN|
|CountryCode|SRB|
|CountryCode|SYC|
|CountryCode|SLE|
|CountryCode|SGP|
|CountryCode|SXM|
|CountryCode|SVK|
|CountryCode|SVN|
|CountryCode|SLB|
|CountryCode|SOM|
|CountryCode|ZAF|
|CountryCode|SGS|
|CountryCode|ESP|
|CountryCode|LKA|
|CountryCode|SDN|
|CountryCode|SUR|
|CountryCode|SSD|
|CountryCode|SJM|
|CountryCode|SWZ|
|CountryCode|SWE|
|CountryCode|CHE|
|CountryCode|SYR|
|CountryCode|TWN|
|CountryCode|TJK|
|CountryCode|TZA|
|CountryCode|THA|
|CountryCode|TLS|
|CountryCode|TGO|
|CountryCode|TKL|
|CountryCode|TON|
|CountryCode|TTO|
|CountryCode|TUN|
|CountryCode|TUR|
|CountryCode|TKM|
|CountryCode|TCA|
|CountryCode|TUV|
|CountryCode|UGA|
|CountryCode|UKR|
|CountryCode|ARE|
|CountryCode|GBR|
|CountryCode|USA|
|CountryCode|UMI|
|CountryCode|URY|
|CountryCode|UZB|
|CountryCode|VUT|
|CountryCode|VEN|
|CountryCode|VNM|
|CountryCode|VGB|
|CountryCode|VIR|
|CountryCode|WLF|
|CountryCode|ESH|
|CountryCode|XXX|
|CountryCode|YEM|
|CountryCode|ZMB|
|CountryCode|ZWE|
|CountryCode|UNK|
|CountryCode|ZZZ|

<h2 id="tocS_CustomData">CustomData</h2>
<!-- backwards compatibility -->
<a id="schemacustomdata"></a>
<a id="schema_CustomData"></a>
<a id="tocScustomdata"></a>
<a id="tocscustomdata"></a>

```json
{}

```

Use this to store any state required by later requests relating to this check. The intent is for your integration to be completely stateless itself, to make it simpler to deploy and maintain. Note: if present, this *must* be an object, rather than an array or other JSON value. However, the keys and values in this object can be anything you like, although we don't recommend storing large amounts of data here, as it will be passed in on every following request to your integration relating to this check.

### Properties

*None*

<h2 id="tocS_DemoResultType">DemoResultType</h2>
<!-- backwards compatibility -->
<a id="schemademoresulttype"></a>
<a id="schema_DemoResultType"></a>
<a id="tocSdemoresulttype"></a>
<a id="tocsdemoresulttype"></a>

```json
"ANY"

```

To support a wide range of testing scenarios, PassFort uses specific values in the demo_result field to select demo results.

### Properties

oneOf

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultAny](#schemademoresultany)|false|none|A demo result that will be used as the default if nothing more specific is requested. It should reflect a genuine non-error result for this integration, but it does not need to be a passing result.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultAnyCharge](#schemademoresultanycharge)|false|none|This demo result will be used to test billing. This is required if your integration supports reselling and the maximum amount your integration can charge for a check is greater than zero.<br>There are no requirements on what the result of the check must be, but if the check is being resold, at least one non-zero charge must be returned. The usual rules also still apply: the total amount charged must be no greater than the maximum specified in your integration's configuration.<br>Note that, as this is a demo check, no credits will actually be deducted from the customer.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultErrorInvalidCredentials](#schemademoresulterrorinvalidcredentials)|false|none|Your integration must return a result as if a customer with a direct commercial relationship has provided credentials that have been rejected by the data provider.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultErrorAnyProviderMessage](#schemademoresulterroranyprovidermessage)|false|none|Your integration must return a result as if the data provider was successfully reached but encountered a problem fulfilling the request, such a problem with the service, or missing information in the request.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultErrorConnectionToProvider](#schemademoresulterrorconnectiontoprovider)|false|none|Your integration must return a result as if it attempted to contact the data provider but the connection failed (due to timeouts or outages).|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultScreenNoHits](#schemademoresultscreennohits)|false|none|Your integration must return a result as if the data provider found no hits for the provided data.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultScreenAllFlagsSameHit](#schemademoresultscreenallflagssamehit)|false|none|Your integration must return a result as if the data provider found a single hit which is flagged with all flag types supported by your integration.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultScreenAllFlagsSeparateHits](#schemademoresultscreenallflagsseparatehits)|false|none|Your integration must return a result as if the data provider found a separate hit for each supported flag type which has a flag of that type.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultScreenSingleRefer](#schemademoresultscreensinglerefer)|false|none|Your integration must return a result as if the data provider found a single hit with a flag of the 'REFER' type.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultScreenSinglePep](#schemademoresultscreensinglepep)|false|none|Your integration must return a result as if the data provider found a single hit with a flag of the 'PEP' type. This demo result is only required if your integration declares support for the 'PEPS' feature.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultScreenSingleSanction](#schemademoresultscreensinglesanction)|false|none|Your integration must return a result as if the data provider found a single hit with a flag of the 'SANCTION' type. This demo result is only required if your integration declares support for the 'SANCTIONS' feature.|

xor

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[DemoResultScreenSingleAdverseMedia](#schemademoresultscreensingleadversemedia)|false|none|Your integration must return a result as if the data provider found a single hit with a flag of the 'ADVERSE_MEDIA' type. This demo result is only required if your integration declares support for the 'ADVERSE_MEDIA' feature.|

<h2 id="tocS_DemoResultAny">DemoResultAny</h2>
<!-- backwards compatibility -->
<a id="schemademoresultany"></a>
<a id="schema_DemoResultAny"></a>
<a id="tocSdemoresultany"></a>
<a id="tocsdemoresultany"></a>

```json
"ANY"

```

ANY

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ANY|string|false|none|A demo result that will be used as the default if nothing more specific is requested. It should reflect a genuine non-error result for this integration, but it does not need to be a passing result.|

#### Enumerated Values

|Property|Value|
|---|---|
|ANY|ANY|

<h2 id="tocS_DemoResultAnyCharge">DemoResultAnyCharge</h2>
<!-- backwards compatibility -->
<a id="schemademoresultanycharge"></a>
<a id="schema_DemoResultAnyCharge"></a>
<a id="tocSdemoresultanycharge"></a>
<a id="tocsdemoresultanycharge"></a>

```json
"ANY_CHARGE"

```

ANY_CHARGE

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ANY_CHARGE|string|false|none|This demo result will be used to test billing. This is required if your integration supports reselling and the maximum amount your integration can charge for a check is greater than zero.<br>There are no requirements on what the result of the check must be, but if the check is being resold, at least one non-zero charge must be returned. The usual rules also still apply: the total amount charged must be no greater than the maximum specified in your integration's configuration.<br>Note that, as this is a demo check, no credits will actually be deducted from the customer.|

#### Enumerated Values

|Property|Value|
|---|---|
|ANY_CHARGE|ANY_CHARGE|

<h2 id="tocS_DemoResultErrorInvalidCredentials">DemoResultErrorInvalidCredentials</h2>
<!-- backwards compatibility -->
<a id="schemademoresulterrorinvalidcredentials"></a>
<a id="schema_DemoResultErrorInvalidCredentials"></a>
<a id="tocSdemoresulterrorinvalidcredentials"></a>
<a id="tocsdemoresulterrorinvalidcredentials"></a>

```json
"ERROR_INVALID_CREDENTIALS"

```

ERROR_INVALID_CREDENTIALS

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ERROR_INVALID_CREDENTIALS|string|false|none|Your integration must return a result as if a customer with a direct commercial relationship has provided credentials that have been rejected by the data provider.|

#### Enumerated Values

|Property|Value|
|---|---|
|ERROR_INVALID_CREDENTIALS|ERROR_INVALID_CREDENTIALS|

<h2 id="tocS_DemoResultErrorAnyProviderMessage">DemoResultErrorAnyProviderMessage</h2>
<!-- backwards compatibility -->
<a id="schemademoresulterroranyprovidermessage"></a>
<a id="schema_DemoResultErrorAnyProviderMessage"></a>
<a id="tocSdemoresulterroranyprovidermessage"></a>
<a id="tocsdemoresulterroranyprovidermessage"></a>

```json
"ERROR_ANY_PROVIDER_MESSAGE"

```

ERROR_ANY_PROVIDER_MESSAGE

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ERROR_ANY_PROVIDER_MESSAGE|string|false|none|Your integration must return a result as if the data provider was successfully reached but encountered a problem fulfilling the request, such a problem with the service, or missing information in the request.|

#### Enumerated Values

|Property|Value|
|---|---|
|ERROR_ANY_PROVIDER_MESSAGE|ERROR_ANY_PROVIDER_MESSAGE|

<h2 id="tocS_DemoResultErrorConnectionToProvider">DemoResultErrorConnectionToProvider</h2>
<!-- backwards compatibility -->
<a id="schemademoresulterrorconnectiontoprovider"></a>
<a id="schema_DemoResultErrorConnectionToProvider"></a>
<a id="tocSdemoresulterrorconnectiontoprovider"></a>
<a id="tocsdemoresulterrorconnectiontoprovider"></a>

```json
"ERROR_CONNECTION_TO_PROVIDER"

```

ERROR_CONNECTION_TO_PROVIDER

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ERROR_CONNECTION_TO_PROVIDER|string|false|none|Your integration must return a result as if it attempted to contact the data provider but the connection failed (due to timeouts or outages).|

#### Enumerated Values

|Property|Value|
|---|---|
|ERROR_CONNECTION_TO_PROVIDER|ERROR_CONNECTION_TO_PROVIDER|

<h2 id="tocS_DemoResultScreenNoHits">DemoResultScreenNoHits</h2>
<!-- backwards compatibility -->
<a id="schemademoresultscreennohits"></a>
<a id="schema_DemoResultScreenNoHits"></a>
<a id="tocSdemoresultscreennohits"></a>
<a id="tocsdemoresultscreennohits"></a>

```json
"SCREEN_NO_HITS"

```

SCREEN_NO_HITS

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|SCREEN_NO_HITS|string|false|none|Your integration must return a result as if the data provider found no hits for the provided data.|

#### Enumerated Values

|Property|Value|
|---|---|
|SCREEN_NO_HITS|SCREEN_NO_HITS|

<h2 id="tocS_DemoResultScreenAllFlagsSameHit">DemoResultScreenAllFlagsSameHit</h2>
<!-- backwards compatibility -->
<a id="schemademoresultscreenallflagssamehit"></a>
<a id="schema_DemoResultScreenAllFlagsSameHit"></a>
<a id="tocSdemoresultscreenallflagssamehit"></a>
<a id="tocsdemoresultscreenallflagssamehit"></a>

```json
"SCREEN_ALL_FLAGS_SAME_HIT"

```

SCREEN_ALL_FLAGS_SAME_HIT

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|SCREEN_ALL_FLAGS_SAME_HIT|string|false|none|Your integration must return a result as if the data provider found a single hit which is flagged with all flag types supported by your integration.|

#### Enumerated Values

|Property|Value|
|---|---|
|SCREEN_ALL_FLAGS_SAME_HIT|SCREEN_ALL_FLAGS_SAME_HIT|

<h2 id="tocS_DemoResultScreenAllFlagsSeparateHits">DemoResultScreenAllFlagsSeparateHits</h2>
<!-- backwards compatibility -->
<a id="schemademoresultscreenallflagsseparatehits"></a>
<a id="schema_DemoResultScreenAllFlagsSeparateHits"></a>
<a id="tocSdemoresultscreenallflagsseparatehits"></a>
<a id="tocsdemoresultscreenallflagsseparatehits"></a>

```json
"SCREEN_ALL_FLAGS_SEPARATE_HITS"

```

SCREEN_ALL_FLAGS_SEPARATE_HITS

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|SCREEN_ALL_FLAGS_SEPARATE_HITS|string|false|none|Your integration must return a result as if the data provider found a separate hit for each supported flag type which has a flag of that type.|

#### Enumerated Values

|Property|Value|
|---|---|
|SCREEN_ALL_FLAGS_SEPARATE_HITS|SCREEN_ALL_FLAGS_SEPARATE_HITS|

<h2 id="tocS_DemoResultScreenSingleRefer">DemoResultScreenSingleRefer</h2>
<!-- backwards compatibility -->
<a id="schemademoresultscreensinglerefer"></a>
<a id="schema_DemoResultScreenSingleRefer"></a>
<a id="tocSdemoresultscreensinglerefer"></a>
<a id="tocsdemoresultscreensinglerefer"></a>

```json
"SCREEN_SINGLE_REFER"

```

SCREEN_SINGLE_REFER

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|SCREEN_SINGLE_REFER|string|false|none|Your integration must return a result as if the data provider found a single hit with a flag of the 'REFER' type.|

#### Enumerated Values

|Property|Value|
|---|---|
|SCREEN_SINGLE_REFER|SCREEN_SINGLE_REFER|

<h2 id="tocS_DemoResultScreenSinglePep">DemoResultScreenSinglePep</h2>
<!-- backwards compatibility -->
<a id="schemademoresultscreensinglepep"></a>
<a id="schema_DemoResultScreenSinglePep"></a>
<a id="tocSdemoresultscreensinglepep"></a>
<a id="tocsdemoresultscreensinglepep"></a>

```json
"SCREEN_SINGLE_PEP"

```

SCREEN_SINGLE_PEP

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|SCREEN_SINGLE_PEP|string|false|none|Your integration must return a result as if the data provider found a single hit with a flag of the 'PEP' type. This demo result is only required if your integration declares support for the 'PEPS' feature.|

#### Enumerated Values

|Property|Value|
|---|---|
|SCREEN_SINGLE_PEP|SCREEN_SINGLE_PEP|

<h2 id="tocS_DemoResultScreenSingleSanction">DemoResultScreenSingleSanction</h2>
<!-- backwards compatibility -->
<a id="schemademoresultscreensinglesanction"></a>
<a id="schema_DemoResultScreenSingleSanction"></a>
<a id="tocSdemoresultscreensinglesanction"></a>
<a id="tocsdemoresultscreensinglesanction"></a>

```json
"SCREEN_SINGLE_SANCTION"

```

SCREEN_SINGLE_SANCTION

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|SCREEN_SINGLE_SANCTION|string|false|none|Your integration must return a result as if the data provider found a single hit with a flag of the 'SANCTION' type. This demo result is only required if your integration declares support for the 'SANCTIONS' feature.|

#### Enumerated Values

|Property|Value|
|---|---|
|SCREEN_SINGLE_SANCTION|SCREEN_SINGLE_SANCTION|

<h2 id="tocS_DemoResultScreenSingleAdverseMedia">DemoResultScreenSingleAdverseMedia</h2>
<!-- backwards compatibility -->
<a id="schemademoresultscreensingleadversemedia"></a>
<a id="schema_DemoResultScreenSingleAdverseMedia"></a>
<a id="tocSdemoresultscreensingleadversemedia"></a>
<a id="tocsdemoresultscreensingleadversemedia"></a>

```json
"SCREEN_SINGLE_ADVERSE_MEDIA"

```

SCREEN_SINGLE_ADVERSE_MEDIA

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|SCREEN_SINGLE_ADVERSE_MEDIA|string|false|none|Your integration must return a result as if the data provider found a single hit with a flag of the 'ADVERSE_MEDIA' type. This demo result is only required if your integration declares support for the 'ADVERSE_MEDIA' feature.|

#### Enumerated Values

|Property|Value|
|---|---|
|SCREEN_SINGLE_ADVERSE_MEDIA|SCREEN_SINGLE_ADVERSE_MEDIA|

<h2 id="tocS_EntityData">EntityData</h2>
<!-- backwards compatibility -->
<a id="schemaentitydata"></a>
<a id="schema_EntityData"></a>
<a id="tocSentitydata"></a>
<a id="tocsentitydata"></a>

```json
{
  "entity_type": "COMPANY",
  "screening_hits": [
    {
      "hit_id": "12345",
      "provider": {
        "name": "Screening Reference Integration",
        "hit_id": "12345",
        "label": "screening-ref"
      },
      "data": {
        "name": "The Example Company"
      },
      "status": "UNRESOLVED",
      "flags": [
        {
          "type": "REFER"
        },
        {
          "type": "PEP"
        },
        {
          "type": "SANCTION"
        },
        {
          "type": "ADVERSE_MEDIA"
        }
      ]
    }
  ]
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|entity_type|string|true|none|none|
|screening_hits|[[ScreeningHit](#schemascreeninghit)]|false|none|none|

#### Enumerated Values

|Property|Value|
|---|---|
|entity_type|INDIVIDUAL|
|entity_type|COMPANY|

<h2 id="tocS_Error">Error</h2>
<!-- backwards compatibility -->
<a id="schemaerror"></a>
<a id="schema_Error"></a>
<a id="tocSerror"></a>
<a id="tocserror"></a>

```json
{
  "type": null,
  "sub_type": "UNSUPPORTED_COUNTRY",
  "message": "string",
  "data": null
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|type|any|true|none|none|
|sub_type|string|false|none|Provides additional detail for certain types of error.|
|message|string|true|none|A message displayed in the PassFort portal when showing the check error.|
|data|any|false|none|Integration-specific structured error information that customers can use to get additional information about the error being reported.|

#### Enumerated Values

|Property|Value|
|---|---|
|sub_type|UNSUPPORTED_COUNTRY|
|sub_type|UNSUPPORTED_DOCUMENT_TYPE|

<h2 id="tocS_Errors">Errors</h2>
<!-- backwards compatibility -->
<a id="schemaerrors"></a>
<a id="schema_Errors"></a>
<a id="tocSerrors"></a>
<a id="tocserrors"></a>

```json
[
  {
    "type": null,
    "sub_type": "UNSUPPORTED_COUNTRY",
    "message": "string",
    "data": null
  }
]

```

A list of errors that occurred while running this check. If this is provided and it's not empty, the result of this check will be considered to be errored by PassFort, regardless of the other contents of this response.

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[[Error](#schemaerror)]|false|none|A list of errors that occurred while running this check. If this is provided and it's not empty, the result of this check will be considered to be errored by PassFort, regardless of the other contents of this response.|

<h2 id="tocS_ErrorType">ErrorType</h2>
<!-- backwards compatibility -->
<a id="schemaerrortype"></a>
<a id="schema_ErrorType"></a>
<a id="tocSerrortype"></a>
<a id="tocserrortype"></a>

```json
"INVALID_CREDENTIALS"

```

The type of error that is being reported.

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|string|false|none|The type of error that is being reported.|

#### Enumerated Values

|Property|Value|
|---|---|
|*anonymous*|INVALID_CREDENTIALS|
|*anonymous*|INVALID_CONFIG|
|*anonymous*|MISSING_CHECK_INPUT|
|*anonymous*|INVALID_CHECK_INPUT|
|*anonymous*|PROVIDER_CONNECTION|
|*anonymous*|PROVIDER_MESSAGE|
|*anonymous*|UNSUPPORTED_DEMO_RESULT|
|*anonymous*|INTEGRATION|

<h2 id="tocS_Metadata">Metadata</h2>
<!-- backwards compatibility -->
<a id="schemametadata"></a>
<a id="schema_Metadata"></a>
<a id="tocSmetadata"></a>
<a id="tocsmetadata"></a>

```json
{
  "protocol_version": 1,
  "provider_name": "Individual Screening Reference"
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|protocol_version|number|true|none|none|
|provider_name|string|true|none|none|

<h2 id="tocS_StartCheckResponse">StartCheckResponse</h2>
<!-- backwards compatibility -->
<a id="schemastartcheckresponse"></a>
<a id="schema_StartCheckResponse"></a>
<a id="tocSstartcheckresponse"></a>
<a id="tocsstartcheckresponse"></a>

```json
{
  "provider_id": "01234567-89ab-cdef-0123-456789abcdef",
  "reference": "ABC-12345",
  "custom_data": {},
  "provider_data": "Demo result. Did not make request to provider.",
  "warnings": [
    {
      "type": "INVALID_CREDENTIALS",
      "message": "string"
    }
  ],
  "errors": [
    {
      "type": null,
      "sub_type": "UNSUPPORTED_COUNTRY",
      "message": "string",
      "data": null
    }
  ]
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|provider_id|[UUID](#schemauuid)|false|none|[Universally unique identifier.](https://en.wikipedia.org/wiki/Universally_unique_identifier)|
|reference|string|false|none|none|
|custom_data|[CustomData](#schemacustomdata)|false|none|Use this to store any state required by later requests relating to this check. The intent is for your integration to be completely stateless itself, to make it simpler to deploy and maintain. Note: if present, this *must* be an object, rather than an array or other JSON value. However, the keys and values in this object can be anything you like, although we don't recommend storing large amounts of data here, as it will be passed in on every following request to your integration relating to this check.|
|provider_data|[ProviderData](#schemaproviderdata)|false|none|The structured JSON data returned by the data provider, or a representation of the provider's response, to allow PassFort to investigate issues that may arise with your integration.|
|warnings|[Warnings](#schemawarnings)|false|none|Similar to 'errors' except that the sub_type and data fields are not present and providing warnings will not cause PassFort to consider the check as errored.|
|errors|[Errors](#schemaerrors)|false|none|A list of errors that occurred while running this check. If this is provided and it's not empty, the result of this check will be considered to be errored by PassFort, regardless of the other contents of this response.|

<h2 id="tocS_StartCheckRequest">StartCheckRequest</h2>
<!-- backwards compatibility -->
<a id="schemastartcheckrequest"></a>
<a id="schema_StartCheckRequest"></a>
<a id="tocSstartcheckrequest"></a>
<a id="tocsstartcheckrequest"></a>

```json
{
  "id": "01234567-89ab-cdef-0123-456789abcdef",
  "demo_result": "ANY",
  "commercial_relationship": "DIRECT",
  "check_input": {
    "entity_type": "COMPANY",
    "screening_hits": [
      {
        "hit_id": "12345",
        "provider": {
          "name": "Screening Reference Integration",
          "hit_id": "12345",
          "label": "screening-ref"
        },
        "data": {
          "name": "The Example Company"
        },
        "status": "UNRESOLVED",
        "flags": [
          {
            "type": "REFER"
          },
          {
            "type": "PEP"
          },
          {
            "type": "SANCTION"
          },
          {
            "type": "ADVERSE_MEDIA"
          }
        ]
      }
    ]
  },
  "provider_config": {},
  "provider_credentials": {}
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|id|[UUID](#schemauuid)|true|none|PassFort's ID for the check being run|
|demo_result|[DemoResultType](#schemademoresulttype)|false|none|To support a wide range of testing scenarios, PassFort uses specific values in the demo_result field to select demo results.|
|commercial_relationship|string|true|none|none|
|check_input|[EntityData](#schemaentitydata)|true|none|none|
|provider_config|[ProviderConfig](#schemaproviderconfig)|true|none|none|
|provider_credentials|[ProviderCredentials](#schemaprovidercredentials)|false|none|none|

#### Enumerated Values

|Property|Value|
|---|---|
|commercial_relationship|DIRECT|
|commercial_relationship|PASSFORT|

<h2 id="tocS_PollCheckResponse">PollCheckResponse</h2>
<!-- backwards compatibility -->
<a id="schemapollcheckresponse"></a>
<a id="schema_PollCheckResponse"></a>
<a id="tocSpollcheckresponse"></a>
<a id="tocspollcheckresponse"></a>

```json
{
  "provider_id": "01234567-89ab-cdef-0123-456789abcdef",
  "reference": "ABC-12345",
  "custom_data": {},
  "provider_data": "Demo result. Did not make request to provider.",
  "check_output": {
    "entity_type": "COMPANY",
    "screening_hits": [
      {
        "hit_id": "12345",
        "provider": {
          "name": "Screening Reference Integration",
          "hit_id": "12345",
          "label": "screening-ref"
        },
        "data": {
          "name": "The Example Company"
        },
        "status": "UNRESOLVED",
        "flags": [
          {
            "type": "REFER"
          },
          {
            "type": "PEP"
          },
          {
            "type": "SANCTION"
          },
          {
            "type": "ADVERSE_MEDIA"
          }
        ]
      }
    ]
  },
  "charges": [],
  "warnings": [
    {
      "type": "INVALID_CREDENTIALS",
      "message": "string"
    }
  ],
  "errors": [
    {
      "type": null,
      "sub_type": "UNSUPPORTED_COUNTRY",
      "message": "string",
      "data": null
    }
  ]
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|provider_id|[UUID](#schemauuid)|false|none|Unique identifier for the provider. The reference field should uniquely identify a check when combined with the provider_id|
|reference|string|false|none|An opaque string identifying this check to the provider. No two checks from the same provider should have the same reference.|
|custom_data|[CustomData](#schemacustomdata)|false|none|Use this to store any state required by later requests relating to this check. The intent is for your integration to be completely stateless itself, to make it simpler to deploy and maintain. Note: if present, this *must* be an object, rather than an array or other JSON value. However, the keys and values in this object can be anything you like, although we don't recommend storing large amounts of data here, as it will be passed in on every following request to your integration relating to this check.|
|provider_data|[ProviderData](#schemaproviderdata)|false|none|The structured JSON data returned by the data provider, or a representation of the provider's response, to allow PassFort to investigate issues that may arise with your integration.|
|check_output|[EntityData](#schemaentitydata)|false|none|none|
|charges|[[Charge](#schemacharge)]|false|none|A list of charges incurred while running this check. Charges may only be returned if no errors occurred (i.e. a result was generated) and the check is being resold (the commercial relationship is with PassFort). For demo checks, charges may be returned, but they will not be deducted from the institution's credit. If charges are returned, the total amount charged must be no greater than the maximum cost-per-check specified in the integration's configuration.|
|warnings|[Warnings](#schemawarnings)|false|none|Similar to 'errors' except that the sub_type and data fields are not present and providing warnings will not cause PassFort to consider the check as errored.|
|errors|[Errors](#schemaerrors)|false|none|A list of errors that occurred while running this check. If this is provided and it's not empty, the result of this check will be considered to be errored by PassFort, regardless of the other contents of this response.|

<h2 id="tocS_PollCheckRequest">PollCheckRequest</h2>
<!-- backwards compatibility -->
<a id="schemapollcheckrequest"></a>
<a id="schema_PollCheckRequest"></a>
<a id="tocSpollcheckrequest"></a>
<a id="tocspollcheckrequest"></a>

```json
{
  "id": "01234567-89ab-cdef-0123-456789abcdef",
  "demo_result": "ANY",
  "commercial_relationship": null,
  "provider_config": {},
  "provider_credentials": {},
  "provider_id": "01234567-89ab-cdef-0123-456789abcdef",
  "reference": "string",
  "custom_data": {}
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|id|[UUID](#schemauuid)|true|none|[Universally unique identifier.](https://en.wikipedia.org/wiki/Universally_unique_identifier)|
|demo_result|[DemoResultType](#schemademoresulttype)|false|none|To support a wide range of testing scenarios, PassFort uses specific values in the demo_result field to select demo results.|
|commercial_relationship|[CommercialRelationshipType](#schemacommercialrelationshiptype)|true|none|none|
|provider_config|[ProviderConfig](#schemaproviderconfig)|true|none|none|
|provider_credentials|[ProviderCredentials](#schemaprovidercredentials)|false|none|none|
|provider_id|[UUID](#schemauuid)|true|none|[Universally unique identifier.](https://en.wikipedia.org/wiki/Universally_unique_identifier)|
|reference|string|true|none|none|
|custom_data|[CustomData](#schemacustomdata)|true|none|Use this to store any state required by later requests relating to this check. The intent is for your integration to be completely stateless itself, to make it simpler to deploy and maintain. Note: if present, this *must* be an object, rather than an array or other JSON value. However, the keys and values in this object can be anything you like, although we don't recommend storing large amounts of data here, as it will be passed in on every following request to your integration relating to this check.|

<h2 id="tocS_ProviderConfig">ProviderConfig</h2>
<!-- backwards compatibility -->
<a id="schemaproviderconfig"></a>
<a id="schema_ProviderConfig"></a>
<a id="tocSproviderconfig"></a>
<a id="tocsproviderconfig"></a>

```json
{}

```

### Properties

*None*

<h2 id="tocS_ProviderCredentials">ProviderCredentials</h2>
<!-- backwards compatibility -->
<a id="schemaprovidercredentials"></a>
<a id="schema_ProviderCredentials"></a>
<a id="tocSprovidercredentials"></a>
<a id="tocsprovidercredentials"></a>

```json
{}

```

### Properties

*None*

<h2 id="tocS_ProviderData">ProviderData</h2>
<!-- backwards compatibility -->
<a id="schemaproviderdata"></a>
<a id="schema_ProviderData"></a>
<a id="tocSproviderdata"></a>
<a id="tocsproviderdata"></a>

```json
"Demo result. Did not make request to provider."

```

The structured JSON data returned by the data provider, or a representation of the provider's response, to allow PassFort to investigate issues that may arise with your integration.

### Properties

*None*

<h2 id="tocS_ScreeningAddressMatch">ScreeningAddressMatch</h2>
<!-- backwards compatibility -->
<a id="schemascreeningaddressmatch"></a>
<a id="schema_ScreeningAddressMatch"></a>
<a id="tocSscreeningaddressmatch"></a>
<a id="tocsscreeningaddressmatch"></a>

```json
{
  "type": "UNKNOWN",
  "label": "string",
  "address": null
}

```

ScreeningAddressMatch

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|type|[ScreeningAddressMatchType](#schemascreeningaddressmatchtype)|true|none|none|
|label|string|false|none|none|
|address|[Address](#schemaaddress)|true|none|none|

<h2 id="tocS_ScreeningAddressMatchType">ScreeningAddressMatchType</h2>
<!-- backwards compatibility -->
<a id="schemascreeningaddressmatchtype"></a>
<a id="schema_ScreeningAddressMatchType"></a>
<a id="tocSscreeningaddressmatchtype"></a>
<a id="tocsscreeningaddressmatchtype"></a>

```json
"UNKNOWN"

```

ScreeningAddressMatchType

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ScreeningAddressMatchType|string|false|none|none|

#### Enumerated Values

|Property|Value|
|---|---|
|ScreeningAddressMatchType|UNKNOWN|

<h2 id="tocS_ScreeningCountryMatch">ScreeningCountryMatch</h2>
<!-- backwards compatibility -->
<a id="schemascreeningcountrymatch"></a>
<a id="schema_ScreeningCountryMatch"></a>
<a id="tocSscreeningcountrymatch"></a>
<a id="tocsscreeningcountrymatch"></a>

```json
{
  "type": "AFFILIATION",
  "label": "string",
  "country": "GBR"
}

```

ScreeningCountryMatch

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|type|[ScreeningCountryMatchType](#schemascreeningcountrymatchtype)|true|none|none|
|label|string|false|none|none|
|country|[CountryCode](#schemacountrycode)|true|none|[ISO 3166-1 alpha-3](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3) (3 letter country code)|

<h2 id="tocS_ScreeningCountryMatchType">ScreeningCountryMatchType</h2>
<!-- backwards compatibility -->
<a id="schemascreeningcountrymatchtype"></a>
<a id="schema_ScreeningCountryMatchType"></a>
<a id="tocSscreeningcountrymatchtype"></a>
<a id="tocsscreeningcountrymatchtype"></a>

```json
"AFFILIATION"

```

ScreeningCountryMatchType

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ScreeningCountryMatchType|string|false|none|none|

#### Enumerated Values

|Property|Value|
|---|---|
|ScreeningCountryMatchType|AFFILIATION|
|ScreeningCountryMatchType|CITIZENSHIP|
|ScreeningCountryMatchType|CURRENT_OWNERSHIP|
|ScreeningCountryMatchType|OWNERSHIP|
|ScreeningCountryMatchType|JURISDICTION|
|ScreeningCountryMatchType|REGISTRATION|
|ScreeningCountryMatchType|ALLEGATION|
|ScreeningCountryMatchType|RESIDENCE|
|ScreeningCountryMatchType|RISK|
|ScreeningCountryMatchType|FORMERLY_SANCTIONED|
|ScreeningCountryMatchType|SANCTIONED|
|ScreeningCountryMatchType|NATIONALITY|
|ScreeningCountryMatchType|UNKNOWN|

<h2 id="tocS_ScreeningDateMatch">ScreeningDateMatch</h2>
<!-- backwards compatibility -->
<a id="schemascreeningdatematch"></a>
<a id="schema_ScreeningDateMatch"></a>
<a id="tocSscreeningdatematch"></a>
<a id="tocsscreeningdatematch"></a>

```json
{
  "type": "DOB",
  "label": "string",
  "date": null
}

```

ScreeningDateMatch

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|type|[ScreeningDateMatchType](#schemascreeningdatematchtype)|true|none|none|
|label|string|false|none|none|
|date|[PartialDate](#schemapartialdate)|true|none|none|

<h2 id="tocS_ScreeningDateMatchType">ScreeningDateMatchType</h2>
<!-- backwards compatibility -->
<a id="schemascreeningdatematchtype"></a>
<a id="schema_ScreeningDateMatchType"></a>
<a id="tocSscreeningdatematchtype"></a>
<a id="tocsscreeningdatematchtype"></a>

```json
"DOB"

```

ScreeningDateMatchType

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ScreeningDateMatchType|string|false|none|none|

#### Enumerated Values

|Property|Value|
|---|---|
|ScreeningDateMatchType|DOB|
|ScreeningDateMatchType|DECEASED|
|ScreeningDateMatchType|END_OF_PEP|
|ScreeningDateMatchType|END_OF_ASSOCIATION_TO_PEP|
|ScreeningDateMatchType|UNKNOWN|

<h2 id="tocS_ScreeningEventsMatcher">ScreeningEventsMatcher</h2>
<!-- backwards compatibility -->
<a id="schemascreeningeventsmatcher"></a>
<a id="schema_ScreeningEventsMatcher"></a>
<a id="tocSscreeningeventsmatcher"></a>
<a id="tocsscreeningeventsmatcher"></a>

```json
{
  "type": "SCREENING_EVENTS",
  "comparison": "ONE_OR_MORE_CONFIRMED",
  "event_types": [
    "PEP_FLAG"
  ]
}

```

ScreeningEventsMatcher

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|type|string|true|none|The matcher type|
|comparison|string|true|none|The comparison between the property against the event types list|
|event_types|[string]|true|none|List of event types to use in the matcher|

#### Enumerated Values

|Property|Value|
|---|---|
|type|SCREENING_EVENTS|
|comparison|ONE_OR_MORE_CONFIRMED|
|comparison|ONE_OR_MORE_POTENTIAL|
|comparison|ONE_OR_MORE_IGNORED_POTENTIAL_CONFIRMED|

<h2 id="tocS_ScreeningEventsTypeProperty">ScreeningEventsTypeProperty</h2>
<!-- backwards compatibility -->
<a id="schemascreeningeventstypeproperty"></a>
<a id="schema_ScreeningEventsTypeProperty"></a>
<a id="tocSscreeningeventstypeproperty"></a>
<a id="tocsscreeningeventstypeproperty"></a>

```json
{
  "type": "SCREENING_EVENTS"
}

```

ScreeningEventsTypeProperty

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|type|string|true|none|The property type|

#### Enumerated Values

|Property|Value|
|---|---|
|type|SCREENING_EVENTS|

<h2 id="tocS_ScreeningFlag">ScreeningFlag</h2>
<!-- backwards compatibility -->
<a id="schemascreeningflag"></a>
<a id="schema_ScreeningFlag"></a>
<a id="tocSscreeningflag"></a>
<a id="tocsscreeningflag"></a>

```json
{
  "type": "ADVERSE_MEDIA",
  "label": "string"
}

```

ScreeningFlag

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|type|[ScreeningFlagType](#schemascreeningflagtype)|true|none|none|
|label|string|false|none|none|

<h2 id="tocS_ScreeningFlagType">ScreeningFlagType</h2>
<!-- backwards compatibility -->
<a id="schemascreeningflagtype"></a>
<a id="schema_ScreeningFlagType"></a>
<a id="tocSscreeningflagtype"></a>
<a id="tocsscreeningflagtype"></a>

```json
"ADVERSE_MEDIA"

```

ScreeningFlagType

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ScreeningFlagType|string|false|none|none|

#### Enumerated Values

|Property|Value|
|---|---|
|ScreeningFlagType|ADVERSE_MEDIA|
|ScreeningFlagType|PEP|
|ScreeningFlagType|REFER|
|ScreeningFlagType|SANCTION|

<h2 id="tocS_ScreeningHit">ScreeningHit</h2>
<!-- backwards compatibility -->
<a id="schemascreeninghit"></a>
<a id="schema_ScreeningHit"></a>
<a id="tocSscreeninghit"></a>
<a id="tocsscreeninghit"></a>

```json
{
  "provider": {
    "name": "string",
    "label": "string",
    "hit_id": "string"
  },
  "status": "MATCH",
  "flags": [
    {
      "type": "ADVERSE_MEDIA",
      "label": "string"
    }
  ],
  "data": {
    "name": "string",
    "addresses": [
      {
        "type": "UNKNOWN",
        "label": "string",
        "address": null
      }
    ],
    "aliases": [
      "string"
    ],
    "associates": [
      {
        "association": {
          "label": "string"
        },
        "data": {
          "name": "string",
          "addresses": [
            {
              "type": "UNKNOWN",
              "label": "string",
              "address": null
            }
          ],
          "aliases": [
            "string"
          ],
          "associates": [
            {}
          ],
          "brand_text": "string",
          "confidence_score": 1,
          "countries": [
            {
              "type": "AFFILIATION",
              "label": "string",
              "country": "GBR"
            }
          ],
          "dates": [
            {
              "type": "DOB",
              "label": "string",
              "date": null
            }
          ],
          "deceased": true,
          "details": [
            {
              "title": "string",
              "text": "string"
            }
          ],
          "gender": "string",
          "sources": [
            {
              "name": "string",
              "url": "string",
              "description": "string"
            }
          ],
          "pep": {
            "roles": [
              {
                "name": "string",
                "tier": 0,
                "tenure": null
              }
            ],
            "tier": 0
          },
          "sanctions": [
            {
              "name": "string",
              "type": "string",
              "list": {
                "name": "string"
              },
              "issued_by": "string",
              "time_periods": []
            }
          ],
          "media": []
        },
        "flags": [
          {
            "type": "ADVERSE_MEDIA",
            "label": "string"
          }
        ]
      }
    ],
    "brand_text": "string",
    "confidence_score": 1,
    "countries": [
      {
        "type": "AFFILIATION",
        "label": "string",
        "country": "GBR"
      }
    ],
    "dates": [
      {
        "type": "DOB",
        "label": "string",
        "date": null
      }
    ],
    "deceased": true,
    "details": [
      {
        "title": "string",
        "text": "string"
      }
    ],
    "gender": "string",
    "sources": [
      {
        "name": "string",
        "url": "string",
        "description": "string"
      }
    ],
    "pep": {
      "roles": [
        {
          "name": "string",
          "tier": 0,
          "tenure": null
        }
      ],
      "tier": 0
    },
    "sanctions": [
      {
        "name": "string",
        "type": "string",
        "list": {
          "name": "string"
        },
        "issued_by": "string",
        "time_periods": []
      }
    ],
    "media": []
  }
}

```

ScreeningHit

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|provider|[ScreeningHitProvider](#schemascreeninghitprovider)|true|none|none|
|status|[ScreeningHitStatus](#schemascreeninghitstatus)|false|none|none|
|flags|[[ScreeningFlag](#schemascreeningflag)]|false|none|none|
|data|[ScreeningHitData](#schemascreeninghitdata)|true|none|none|

<h2 id="tocS_ScreeningHitAssociate">ScreeningHitAssociate</h2>
<!-- backwards compatibility -->
<a id="schemascreeninghitassociate"></a>
<a id="schema_ScreeningHitAssociate"></a>
<a id="tocSscreeninghitassociate"></a>
<a id="tocsscreeninghitassociate"></a>

```json
{
  "association": {
    "label": "string"
  },
  "data": {
    "name": "string",
    "addresses": [
      {
        "type": "UNKNOWN",
        "label": "string",
        "address": null
      }
    ],
    "aliases": [
      "string"
    ],
    "associates": [
      {
        "association": {
          "label": "string"
        },
        "data": {},
        "flags": [
          {
            "type": "ADVERSE_MEDIA",
            "label": "string"
          }
        ]
      }
    ],
    "brand_text": "string",
    "confidence_score": 1,
    "countries": [
      {
        "type": "AFFILIATION",
        "label": "string",
        "country": "GBR"
      }
    ],
    "dates": [
      {
        "type": "DOB",
        "label": "string",
        "date": null
      }
    ],
    "deceased": true,
    "details": [
      {
        "title": "string",
        "text": "string"
      }
    ],
    "gender": "string",
    "sources": [
      {
        "name": "string",
        "url": "string",
        "description": "string"
      }
    ],
    "pep": {
      "roles": [
        {
          "name": "string",
          "tier": 0,
          "tenure": null
        }
      ],
      "tier": 0
    },
    "sanctions": [
      {
        "name": "string",
        "type": "string",
        "list": {
          "name": "string"
        },
        "issued_by": "string",
        "time_periods": []
      }
    ],
    "media": []
  },
  "flags": [
    {
      "type": "ADVERSE_MEDIA",
      "label": "string"
    }
  ]
}

```

ScreeningHitAssociate

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|association|[ScreeningHitAssociation](#schemascreeninghitassociation)|true|none|none|
|data|[ScreeningHitDataBase](#schemascreeninghitdatabase)|true|none|none|
|flags|[[ScreeningFlag](#schemascreeningflag)]|true|none|none|

<h2 id="tocS_ScreeningHitAssociation">ScreeningHitAssociation</h2>
<!-- backwards compatibility -->
<a id="schemascreeninghitassociation"></a>
<a id="schema_ScreeningHitAssociation"></a>
<a id="tocSscreeninghitassociation"></a>
<a id="tocsscreeninghitassociation"></a>

```json
{
  "label": "string"
}

```

ScreeningHitAssociation

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|label|string|true|none|none|

<h2 id="tocS_ScreeningHitData">ScreeningHitData</h2>
<!-- backwards compatibility -->
<a id="schemascreeninghitdata"></a>
<a id="schema_ScreeningHitData"></a>
<a id="tocSscreeninghitdata"></a>
<a id="tocsscreeninghitdata"></a>

```json
{
  "name": "string",
  "addresses": [
    {
      "type": "UNKNOWN",
      "label": "string",
      "address": null
    }
  ],
  "aliases": [
    "string"
  ],
  "associates": [
    {
      "association": {
        "label": "string"
      },
      "data": {
        "name": "string",
        "addresses": [
          {
            "type": "UNKNOWN",
            "label": "string",
            "address": null
          }
        ],
        "aliases": [
          "string"
        ],
        "associates": [
          {}
        ],
        "brand_text": "string",
        "confidence_score": 1,
        "countries": [
          {
            "type": "AFFILIATION",
            "label": "string",
            "country": "GBR"
          }
        ],
        "dates": [
          {
            "type": "DOB",
            "label": "string",
            "date": null
          }
        ],
        "deceased": true,
        "details": [
          {
            "title": "string",
            "text": "string"
          }
        ],
        "gender": "string",
        "sources": [
          {
            "name": "string",
            "url": "string",
            "description": "string"
          }
        ],
        "pep": {
          "roles": [
            {
              "name": "string",
              "tier": 0,
              "tenure": null
            }
          ],
          "tier": 0
        },
        "sanctions": [
          {
            "name": "string",
            "type": "string",
            "list": {
              "name": "string"
            },
            "issued_by": "string",
            "time_periods": []
          }
        ],
        "media": []
      },
      "flags": [
        {
          "type": "ADVERSE_MEDIA",
          "label": "string"
        }
      ]
    }
  ],
  "brand_text": "string",
  "confidence_score": 1,
  "countries": [
    {
      "type": "AFFILIATION",
      "label": "string",
      "country": "GBR"
    }
  ],
  "dates": [
    {
      "type": "DOB",
      "label": "string",
      "date": null
    }
  ],
  "deceased": true,
  "details": [
    {
      "title": "string",
      "text": "string"
    }
  ],
  "gender": "string",
  "sources": [
    {
      "name": "string",
      "url": "string",
      "description": "string"
    }
  ],
  "pep": {
    "roles": [
      {
        "name": "string",
        "tier": 0,
        "tenure": null
      }
    ],
    "tier": 0
  },
  "sanctions": [
    {
      "name": "string",
      "type": "string",
      "list": {
        "name": "string"
      },
      "issued_by": "string",
      "time_periods": []
    }
  ],
  "media": []
}

```

### Properties

allOf

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[ScreeningHitDataBase](#schemascreeninghitdatabase)|false|none|none|

and

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|object|false|none|none|
|» associates|[[ScreeningHitAssociate](#schemascreeninghitassociate)]|false|none|none|

<h2 id="tocS_ScreeningHitDataBase">ScreeningHitDataBase</h2>
<!-- backwards compatibility -->
<a id="schemascreeninghitdatabase"></a>
<a id="schema_ScreeningHitDataBase"></a>
<a id="tocSscreeninghitdatabase"></a>
<a id="tocsscreeninghitdatabase"></a>

```json
{
  "name": "string",
  "addresses": [
    {
      "type": "UNKNOWN",
      "label": "string",
      "address": null
    }
  ],
  "aliases": [
    "string"
  ],
  "associates": [
    {
      "association": {
        "label": "string"
      },
      "data": {
        "name": "string",
        "addresses": [
          {
            "type": "UNKNOWN",
            "label": "string",
            "address": null
          }
        ],
        "aliases": [
          "string"
        ],
        "associates": [],
        "brand_text": "string",
        "confidence_score": 1,
        "countries": [
          {
            "type": "AFFILIATION",
            "label": "string",
            "country": "GBR"
          }
        ],
        "dates": [
          {
            "type": "DOB",
            "label": "string",
            "date": null
          }
        ],
        "deceased": true,
        "details": [
          {
            "title": "string",
            "text": "string"
          }
        ],
        "gender": "string",
        "sources": [
          {
            "name": "string",
            "url": "string",
            "description": "string"
          }
        ],
        "pep": {
          "roles": [
            {
              "name": "string",
              "tier": 0,
              "tenure": null
            }
          ],
          "tier": 0
        },
        "sanctions": [
          {
            "name": "string",
            "type": "string",
            "list": {
              "name": "string"
            },
            "issued_by": "string",
            "time_periods": []
          }
        ],
        "media": []
      },
      "flags": [
        {
          "type": "ADVERSE_MEDIA",
          "label": "string"
        }
      ]
    }
  ],
  "brand_text": "string",
  "confidence_score": 1,
  "countries": [
    {
      "type": "AFFILIATION",
      "label": "string",
      "country": "GBR"
    }
  ],
  "dates": [
    {
      "type": "DOB",
      "label": "string",
      "date": null
    }
  ],
  "deceased": true,
  "details": [
    {
      "title": "string",
      "text": "string"
    }
  ],
  "gender": "string",
  "sources": [
    {
      "name": "string",
      "url": "string",
      "description": "string"
    }
  ],
  "pep": {
    "roles": [
      {
        "name": "string",
        "tier": 0,
        "tenure": null
      }
    ],
    "tier": 0
  },
  "sanctions": [
    {
      "name": "string",
      "type": "string",
      "list": {
        "name": "string"
      },
      "issued_by": "string",
      "time_periods": []
    }
  ],
  "media": []
}

```

ScreeningHitData

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|name|string|true|none|none|
|addresses|[[ScreeningAddressMatch](#schemascreeningaddressmatch)]|false|none|none|
|aliases|[string]|false|none|none|
|associates|[[ScreeningHitAssociate](#schemascreeninghitassociate)]|false|none|none|
|brand_text|string|false|none|none|
|confidence_score|number|false|none|none|
|countries|[[ScreeningCountryMatch](#schemascreeningcountrymatch)]|false|none|none|
|dates|[[ScreeningDateMatch](#schemascreeningdatematch)]|false|none|none|
|deceased|boolean|false|none|none|
|details|[[ScreeningHitDetail](#schemascreeninghitdetail)]|false|none|none|
|gender|string|false|none|none|
|sources|[[ScreeningSource](#schemascreeningsource)]|false|none|none|
|pep|[ScreeningPepData](#schemascreeningpepdata)|false|none|none|
|sanctions|[[ScreeningSanctionData](#schemascreeningsanctiondata)]|false|none|none|
|media|[[MediaArticle](#schemamediaarticle)]|false|none|none|

<h2 id="tocS_ScreeningHitDetail">ScreeningHitDetail</h2>
<!-- backwards compatibility -->
<a id="schemascreeninghitdetail"></a>
<a id="schema_ScreeningHitDetail"></a>
<a id="tocSscreeninghitdetail"></a>
<a id="tocsscreeninghitdetail"></a>

```json
{
  "title": "string",
  "text": "string"
}

```

ScreeningHitDetail

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|title|string|false|none|none|
|text|string|false|none|none|

<h2 id="tocS_ScreeningHitProvider">ScreeningHitProvider</h2>
<!-- backwards compatibility -->
<a id="schemascreeninghitprovider"></a>
<a id="schema_ScreeningHitProvider"></a>
<a id="tocSscreeninghitprovider"></a>
<a id="tocsscreeninghitprovider"></a>

```json
{
  "name": "string",
  "label": "string",
  "hit_id": "string"
}

```

ScreeningHitProvider

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|name|string|true|none|none|
|label|string|true|none|none|
|hit_id|string|true|none|none|

<h2 id="tocS_ScreeningHitStatus">ScreeningHitStatus</h2>
<!-- backwards compatibility -->
<a id="schemascreeninghitstatus"></a>
<a id="schema_ScreeningHitStatus"></a>
<a id="tocSscreeninghitstatus"></a>
<a id="tocsscreeninghitstatus"></a>

```json
"MATCH"

```

ScreeningHitStatus

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|ScreeningHitStatus|string|false|none|none|

#### Enumerated Values

|Property|Value|
|---|---|
|ScreeningHitStatus|MATCH|
|ScreeningHitStatus|MISMATCH|
|ScreeningHitStatus|UNRESOLVED|

<h2 id="tocS_ScreeningPepData">ScreeningPepData</h2>
<!-- backwards compatibility -->
<a id="schemascreeningpepdata"></a>
<a id="schema_ScreeningPepData"></a>
<a id="tocSscreeningpepdata"></a>
<a id="tocsscreeningpepdata"></a>

```json
{
  "roles": [
    {
      "name": "string",
      "tier": 0,
      "tenure": null
    }
  ],
  "tier": 0
}

```

ScreeningPepData

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|roles|[[ScreeningPepRole](#schemascreeningpeprole)]|true|none|none|
|tier|integer|false|none|none|

<h2 id="tocS_ScreeningPepRole">ScreeningPepRole</h2>
<!-- backwards compatibility -->
<a id="schemascreeningpeprole"></a>
<a id="schema_ScreeningPepRole"></a>
<a id="tocSscreeningpeprole"></a>
<a id="tocsscreeningpeprole"></a>

```json
{
  "name": "string",
  "tier": 0,
  "tenure": null
}

```

ScreeningPepRole

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|name|string|true|none|none|
|tier|integer|false|none|none|
|tenure|[Tenure](#schematenure)|false|none|none|

<h2 id="tocS_ScreeningSanctionData">ScreeningSanctionData</h2>
<!-- backwards compatibility -->
<a id="schemascreeningsanctiondata"></a>
<a id="schema_ScreeningSanctionData"></a>
<a id="tocSscreeningsanctiondata"></a>
<a id="tocsscreeningsanctiondata"></a>

```json
{
  "name": "string",
  "type": "string",
  "list": {
    "name": "string"
  },
  "issued_by": "string",
  "time_periods": []
}

```

ScreeningSanctionData

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|name|string|true|none|none|
|type|string|false|none|none|
|list|[ScreeningSanctionsList](#schemascreeningsanctionslist)|false|none|none|
|issued_by|string|false|none|none|
|time_periods|[[Tenure](#schematenure)]|false|none|none|

<h2 id="tocS_ScreeningSanctionsList">ScreeningSanctionsList</h2>
<!-- backwards compatibility -->
<a id="schemascreeningsanctionslist"></a>
<a id="schema_ScreeningSanctionsList"></a>
<a id="tocSscreeningsanctionslist"></a>
<a id="tocsscreeningsanctionslist"></a>

```json
{
  "name": "string"
}

```

ScreeningSanctionsList

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|name|string|true|none|none|

<h2 id="tocS_ScreeningSource">ScreeningSource</h2>
<!-- backwards compatibility -->
<a id="schemascreeningsource"></a>
<a id="schema_ScreeningSource"></a>
<a id="tocSscreeningsource"></a>
<a id="tocsscreeningsource"></a>

```json
{
  "name": "string",
  "url": "string",
  "description": "string"
}

```

ScreeningSource

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|name|string|true|none|none|
|url|string|false|none|none|
|description|string|false|none|none|

<h2 id="tocS_Warning">Warning</h2>
<!-- backwards compatibility -->
<a id="schemawarning"></a>
<a id="schema_Warning"></a>
<a id="tocSwarning"></a>
<a id="tocswarning"></a>

```json
{
  "type": "INVALID_CREDENTIALS",
  "message": "string"
}

```

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|type|[ErrorType](#schemaerrortype)|true|none|The type of error that is being reported.|
|message|string|true|none|none|

<h2 id="tocS_Warnings">Warnings</h2>
<!-- backwards compatibility -->
<a id="schemawarnings"></a>
<a id="schema_Warnings"></a>
<a id="tocSwarnings"></a>
<a id="tocswarnings"></a>

```json
[
  {
    "type": "INVALID_CREDENTIALS",
    "message": "string"
  }
]

```

Similar to 'errors' except that the sub_type and data fields are not present and providing warnings will not cause PassFort to consider the check as errored.

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|*anonymous*|[[Warning](#schemawarning)]|false|none|Similar to 'errors' except that the sub_type and data fields are not present and providing warnings will not cause PassFort to consider the check as errored.|

<h2 id="tocS_UUID">UUID</h2>
<!-- backwards compatibility -->
<a id="schemauuid"></a>
<a id="schema_UUID"></a>
<a id="tocSuuid"></a>
<a id="tocsuuid"></a>

```json
"01234567-89ab-cdef-0123-456789abcdef"

```

UUID

### Properties

|Name|Type|Required|Restrictions|Description|
|---|---|---|---|---|
|UUID|string|false|none|[Universally unique identifier.](https://en.wikipedia.org/wiki/Universally_unique_identifier)|

